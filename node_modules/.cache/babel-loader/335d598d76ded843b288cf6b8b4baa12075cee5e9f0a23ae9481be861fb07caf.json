{"ast":null,"code":"import React,{useState,useEffect}from'react';import BotCollection from'./components/BotCollection';import YourBotArmy from'./components/YourBotArmy';import SortBar from'./components/SortBar';import BotSpecs from'./components/BotSpecs';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[bots,setBots]=useState([]);const[yourBotArmy,setYourBotArmy]=useState([]);const[selectedBot,setSelectedBot]=useState(null);const[sortBy,setSortBy]=useState('name');// Default sorting by name\nuseEffect(()=>{fetch(\"https://bot-api-ga2w.onrender.com/bots?_sort=\".concat(sortBy)).then(response=>response.json()).then(data=>setBots(data)).catch(error=>console.error('Error fetching bots:',error));},[sortBy]);useEffect(()=>{fetch('https://bot-api-ga2w.onrender.com/enlisted').then(response=>response.json()).then(data=>setYourBotArmy(data)).catch(error=>console.error('Error fetching enlisted bots:',error));},[]);// Fetch enlisted bots once on component mount\nconst addBotToArmy=bot=>{if(!yourBotArmy.some(b=>b.id===bot.id)){setYourBotArmy(enlisted=>[...enlisted,bot]);fetch('https://bot-api-ga2w.onrender.com/enlisted',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(bot)}).then(response=>{if(!response.ok){throw new Error(\"Failed to enlist bot: \".concat(response.statusText));}}).catch(error=>console.error('Error enlisting bot:',error));}};const removeBotFromArmy=botId=>{fetch(\"https://bot-api-ga2w.onrender.com/enlisted/\".concat(botId),{method:'DELETE'}).then(()=>{setBots(bots=>bots.filter(bot=>bot.id!==botId));setYourBotArmy(bots=>bots.filter(bot=>bot.id!==botId));window.location.reload();}).catch(error=>console.error('Error Deleting bot:',error));};const dischargeBot=botId=>{fetch(\"https://bot-api-ga2w.onrender.com/bots/\".concat(botId),{method:'DELETE'}).then(()=>{setBots(bots=>bots.filter(bot=>bot.id!==botId));setYourBotArmy(bots=>bots.filter(bot=>bot.id!==botId));}).catch(error=>console.error('Error discharging bot:',error));};const selectBot=bot=>{setSelectedBot(bot);};const goBackToListView=()=>{setSelectedBot(null);};const handleSortChange=value=>{setSortBy(value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{id:\"title\",children:\"Bot Battlr\"}),/*#__PURE__*/_jsx(SortBar,{onSortChange:handleSortChange}),selectedBot?/*#__PURE__*/_jsx(BotSpecs,{bot:selectedBot,goBackToListView:goBackToListView,addBotToArmy:addBotToArmy}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(YourBotArmy,{army:yourBotArmy,removeBotFromArmy:removeBotFromArmy}),/*#__PURE__*/_jsx(BotCollection,{bots:bots,selectBot:selectBot,addBotToArmy:addBotToArmy,dischargeBot:dischargeBot})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","SortBar","BotSpecs","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","bots","setBots","yourBotArmy","setYourBotArmy","selectedBot","setSelectedBot","sortBy","setSortBy","fetch","concat","then","response","json","data","catch","error","console","addBotToArmy","bot","some","b","id","enlisted","method","headers","body","JSON","stringify","ok","Error","statusText","removeBotFromArmy","botId","filter","window","location","reload","dischargeBot","selectBot","goBackToListView","handleSortChange","value","children","onSortChange","army"],"sources":["/home/max/code-challenges/Bot-Battlr/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport SortBar from './components/SortBar';\nimport BotSpecs from './components/BotSpecs';\nimport './App.css';\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [yourBotArmy, setYourBotArmy] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [sortBy, setSortBy] = useState('name'); // Default sorting by name\n\n  useEffect(() => {\n    fetch(`https://bot-api-ga2w.onrender.com/bots?_sort=${sortBy}`)\n      .then((response) => response.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.error('Error fetching bots:', error));\n  }, [sortBy]);\n\n  useEffect(() => {\n    fetch('https://bot-api-ga2w.onrender.com/enlisted')\n      .then((response) => response.json())\n      .then((data) => setYourBotArmy(data))\n      .catch((error) => console.error('Error fetching enlisted bots:', error));\n  }, []); // Fetch enlisted bots once on component mount\n\n  const addBotToArmy = (bot) => {\n    if (!yourBotArmy.some((b) => b.id === bot.id)) {\n      setYourBotArmy((enlisted) => [...enlisted, bot]);\n\n      fetch('https://bot-api-ga2w.onrender.com/enlisted', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(bot),\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(`Failed to enlist bot: ${response.statusText}`);\n          }\n        })\n        .catch((error) => console.error('Error enlisting bot:', error));\n    }\n  };\n\n  const removeBotFromArmy = (botId) => {\n    fetch(`https://bot-api-ga2w.onrender.com/enlisted/${botId}`, {\n      method: 'DELETE',\n    })\n    .then(() => {\n      setBots((bots) => bots.filter((bot) => bot.id !== botId));\n      setYourBotArmy((bots) => bots.filter((bot) => bot.id !== botId));\n      window.location.reload();\n    })\n    .catch((error) => console.error('Error Deleting bot:', error));\n  };\n\n  const dischargeBot = (botId) => {\n    fetch(`https://bot-api-ga2w.onrender.com/bots/${botId}`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        setBots((bots) => bots.filter((bot) => bot.id !== botId));\n        setYourBotArmy((bots) => bots.filter((bot) => bot.id !== botId));\n      })\n      .catch((error) => console.error('Error discharging bot:', error));\n  };\n\n  \n\n  const selectBot = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const goBackToListView = () => {\n    setSelectedBot(null);\n  };\n\n  const handleSortChange = (value) => {\n    setSortBy(value);\n  };\n\n  return (\n    <div>\n      <h1 id='title'>Bot Battlr</h1>\n      <SortBar onSortChange={handleSortChange} />\n      {selectedBot ? (\n        <BotSpecs\n          bot={selectedBot}\n          goBackToListView={goBackToListView}\n          addBotToArmy={addBotToArmy}\n        />\n      ) : (\n        <>\n          <YourBotArmy army={yourBotArmy} removeBotFromArmy={removeBotFromArmy} />\n          <BotCollection\n            bots={bots}\n            selectBot={selectBot}\n            addBotToArmy={addBotToArmy}\n            dischargeBot={dischargeBot}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}