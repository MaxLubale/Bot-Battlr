{"ast":null,"code":"var _jsxFileName = \"/home/max/code-challenges/Bot-Battlr/src/components/BotArmy.js\";\n// BotArmy.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotArmy = ({\n  enlistedBots\n}) => {\n  // Check if enlistedBots is undefined or null before using map\n  if (!enlistedBots) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enlisted Bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: enlistedBots.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: bot.avatar_url,\n          alt: `${bot.name} Avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), bot.name, \" - \", bot.bot_class]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = BotArmy;\nexport default BotArmy;\nvar _c;\n$RefreshReg$(_c, \"BotArmy\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BotArmy","enlistedBots","children","fileName","_jsxFileName","lineNumber","columnNumber","map","bot","src","avatar_url","alt","name","bot_class","id","_c","$RefreshReg$"],"sources":["/home/max/code-challenges/Bot-Battlr/src/components/BotArmy.js"],"sourcesContent":["// BotArmy.js\nimport React from 'react';\n\nconst BotArmy = ({ enlistedBots }) => {\n  // Check if enlistedBots is undefined or null before using map\n  if (!enlistedBots) {\n    return null; \n  }\n\n  return (\n    <div>\n      <h2>Enlisted Bots</h2>\n      <ul>\n        {enlistedBots.map(bot => (\n          <li key={bot.id}>\n            <img src={bot.avatar_url} alt={`${bot.name} Avatar`} />\n            {bot.name} - {bot.bot_class}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BotArmy;\n\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EACpC;EACA,IAAI,CAACA,YAAY,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBP,OAAA;MAAAG,QAAA,EACGD,YAAY,CAACM,GAAG,CAACC,GAAG,iBACnBT,OAAA;QAAAG,QAAA,gBACEH,OAAA;UAAKU,GAAG,EAAED,GAAG,CAACE,UAAW;UAACC,GAAG,EAAG,GAAEH,GAAG,CAACI,IAAK;QAAS;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACtDE,GAAG,CAACI,IAAI,EAAC,KAAG,EAACJ,GAAG,CAACK,SAAS;MAAA,GAFpBL,GAAG,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACS,EAAA,GAnBIf,OAAO;AAqBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}