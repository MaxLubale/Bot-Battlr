{"ast":null,"code":"var _jsxFileName = \"/home/max/code-challenges/Bot-Battlr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/BotArmy';\nimport BotSpecs from './components/BotSpecs';\nimport SortBar from './components/SortBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    // Fetch data from the main list\n    fetch('http://localhost:3001/bots').then(response => response.json()).then(data => setBots(data));\n\n    // Fetch data from the enlisted bots list\n    fetch('http://localhost:3001/enlistedBots').then(response => response.json()).then(data => setEnlistedBots(data));\n  }, []);\n  const enlistBot = bot => {\n    // Add bot to enlistedBots\n    setEnlistedBots([...enlistedBots, bot]);\n\n    // Update the enlistedBots list on the server\n    fetch('http://localhost:3001/enlistedBots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bot)\n    });\n  };\n  const releaseBot = botId => {\n    // Remove bot from enlistedBots\n    setEnlistedBots(enlistedBots.filter(bot => bot.id !== botId));\n\n    // Update the enlistedBots list on the server\n    fetch(`http://localhost:3001/enlistedBots/${botId}`, {\n      method: 'DELETE'\n    });\n  };\n  const dischargeBot = botId => {\n    // Delete bot from backend and update enlistedBots\n    fetch(`http://localhost:3001/bots/${botId}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setBots(bots.filter(bot => bot.id !== botId));\n      setEnlistedBots(enlistedBots.filter(bot => bot.id !== botId));\n    });\n  };\n  const handleSort = criteria => {\n    // Sort bots based on the selected criteria\n    const sortedBots = [...bots].sort((a, b) => a[criteria] - b[criteria]);\n    setBots(sortedBots);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SortBar, {\n        onSort: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bot-specs/:id\",\n          element: /*#__PURE__*/_jsxDEV(BotSpecs, {\n            bots: bots,\n            enlistBot: enlistBot,\n            dischargeBot: dischargeBot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/BotArmy\",\n          element: /*#__PURE__*/_jsxDEV(YourBotArmy, {\n            enlistedBots: enlistedBots,\n            releaseBot: releaseBot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(BotCollection, {\n            bots: bots,\n            enlistBot: enlistBot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","BotCollection","YourBotArmy","BotSpecs","SortBar","jsxDEV","_jsxDEV","App","_s","bots","setBots","enlistedBots","setEnlistedBots","fetch","then","response","json","data","enlistBot","bot","method","headers","body","JSON","stringify","releaseBot","botId","filter","id","dischargeBot","handleSort","criteria","sortedBots","sort","a","b","children","className","onSort","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/max/code-challenges/Bot-Battlr/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/BotArmy';\nimport BotSpecs from './components/BotSpecs';\nimport SortBar from './components/SortBar';\nimport './App.css';\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from the main list\n    fetch('http://localhost:3001/bots')\n      .then((response) => response.json())\n      .then((data) => setBots(data));\n\n    // Fetch data from the enlisted bots list\n    fetch('http://localhost:3001/enlistedBots')\n      .then((response) => response.json())\n      .then((data) => setEnlistedBots(data));\n  }, []);\n\n  const enlistBot = (bot) => {\n    // Add bot to enlistedBots\n    setEnlistedBots([...enlistedBots, bot]);\n\n    // Update the enlistedBots list on the server\n    fetch('http://localhost:3001/enlistedBots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(bot),\n    });\n  };\n\n  const releaseBot = (botId) => {\n    // Remove bot from enlistedBots\n    setEnlistedBots(enlistedBots.filter((bot) => bot.id !== botId));\n\n    // Update the enlistedBots list on the server\n    fetch(`http://localhost:3001/enlistedBots/${botId}`, {\n      method: 'DELETE',\n    });\n  };\n\n  const dischargeBot = (botId) => {\n    // Delete bot from backend and update enlistedBots\n    fetch(`http://localhost:3001/bots/${botId}`, {\n      method: 'DELETE',\n    }).then(() => {\n      setBots(bots.filter((bot) => bot.id !== botId));\n      setEnlistedBots(enlistedBots.filter((bot) => bot.id !== botId));\n    });\n  };\n\n  const handleSort = (criteria) => {\n    // Sort bots based on the selected criteria\n    const sortedBots = [...bots].sort((a, b) => a[criteria] - b[criteria]);\n    setBots(sortedBots);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <SortBar onSort={handleSort} />\n        <Routes>\n          <Route path=\"/bot-specs/:id\" element={<BotSpecs bots={bots} enlistBot={enlistBot} dischargeBot={dischargeBot} />} />\n          <Route path=\"/BotArmy\" element={<YourBotArmy enlistedBots={enlistedBots} releaseBot={releaseBot} />} />\n          <Route path=\"/\" element={<BotCollection bots={bots} enlistBot={enlistBot} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}