{"ast":null,"code":"var _jsxFileName = \"/home/max/code-challenges/Bot-Battlr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport BotSpecs from './components/BotSpecs';\nimport SortBar from './components/SortBar'; // Import the SortBar component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [sortedBy, setSortedBy] = useState(null);\n  useEffect(() => {\n    // Fetch data from the local server\n    fetch('http://localhost:8001/bots').then(response => response.json()).then(data => setBots(data));\n  }, []);\n  const enlistBot = bot => {\n    // Add bot to enlistedBots\n    setEnlistedBots([...enlistedBots, bot]);\n  };\n  const releaseBot = botId => {\n    // Remove bot from enlistedBots\n    setEnlistedBots(enlistedBots.filter(bot => bot.id !== botId));\n  };\n  const dischargeBot = botId => {\n    // Delete bot from backend and update enlistedBots\n    fetch(`http://localhost:8001/bots/${botId}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setEnlistedBots(enlistedBots.filter(bot => bot.id !== botId));\n    });\n  };\n  const handleSort = criteria => {\n    // Sort bots based on the selected criteria\n    const sortedBots = [...bots].sort((a, b) => a[criteria] - b[criteria]);\n    setBots(sortedBots);\n    setSortedBy(criteria);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SortBar, {\n        onSort: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bot-specs/:id\",\n          children: /*#__PURE__*/_jsxDEV(BotSpecs, {\n            bots: bots,\n            enlistBot: enlistBot,\n            dischargeBot: dischargeBot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/your-bot-army\",\n          children: /*#__PURE__*/_jsxDEV(YourBotArmy, {\n            enlistedBots: enlistedBots,\n            releaseBot: releaseBot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(BotCollection, {\n            bots: bots,\n            enlistBot: enlistBot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"myLCS8L7z4844I9Jdhypl2NX3/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","BotCollection","YourBotArmy","BotSpecs","SortBar","jsxDEV","_jsxDEV","App","_s","bots","setBots","enlistedBots","setEnlistedBots","sortedBy","setSortedBy","fetch","then","response","json","data","enlistBot","bot","releaseBot","botId","filter","id","dischargeBot","method","handleSort","criteria","sortedBots","sort","a","b","children","className","onSort","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["/home/max/code-challenges/Bot-Battlr/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport BotSpecs from './components/BotSpecs';\nimport SortBar from './components/SortBar'; // Import the SortBar component\nimport './App.css';\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [sortedBy, setSortedBy] = useState(null);\n\n  useEffect(() => {\n    // Fetch data from the local server\n    fetch('http://localhost:8001/bots')\n      .then((response) => response.json())\n      .then((data) => setBots(data));\n  }, []);\n\n  const enlistBot = (bot) => {\n    // Add bot to enlistedBots\n    setEnlistedBots([...enlistedBots, bot]);\n  };\n\n  const releaseBot = (botId) => {\n    // Remove bot from enlistedBots\n    setEnlistedBots(enlistedBots.filter((bot) => bot.id !== botId));\n  };\n\n  const dischargeBot = (botId) => {\n    // Delete bot from backend and update enlistedBots\n    fetch(`http://localhost:8001/bots/${botId}`, {\n      method: 'DELETE',\n    }).then(() => {\n      setEnlistedBots(enlistedBots.filter((bot) => bot.id !== botId));\n    });\n  };\n\n  const handleSort = (criteria) => {\n    // Sort bots based on the selected criteria\n    const sortedBots = [...bots].sort((a, b) => a[criteria] - b[criteria]);\n    setBots(sortedBots);\n    setSortedBy(criteria);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <SortBar onSort={handleSort} />\n        <Switch>\n          <Route path=\"/bot-specs/:id\">\n            <BotSpecs bots={bots} enlistBot={enlistBot} dischargeBot={dischargeBot} />\n          </Route>\n          <Route path=\"/your-bot-army\">\n            <YourBotArmy enlistedBots={enlistedBots} releaseBot={releaseBot} />\n          </Route>\n          <Route path=\"/\">\n            <BotCollection bots={bots} enlistBot={enlistBot} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}