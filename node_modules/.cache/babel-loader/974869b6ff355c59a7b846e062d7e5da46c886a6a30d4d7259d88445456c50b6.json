{"ast":null,"code":"var _jsxFileName = \"/home/max/code-challenges/Bot-Battlr/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\n// src/components/BotCollection.js\nimport React, { useState, useEffect } from 'react';\nimport BotSpecs from './BotSpecs';\nimport SortBar from './SortBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = ({\n  addToArmy,\n  filterByClass,\n  showBotSpecs\n}) => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [sortProperty, setSortProperty] = useState('health');\n  useEffect(() => {\n    fetch('http://localhost:8001/bots').then(response => {\n      if (!response.ok) {\n        throw new Error(`Failed to fetch bot data: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(data => {\n      setBots(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const sortBots = property => {\n    const sortedBots = [...bots].sort((a, b) => a[property] - b[property]);\n    setBots(sortedBots);\n  };\n  useEffect(() => {\n    sortBots(sortProperty);\n  }, [sortProperty]);\n  const handleEnlist = bot => {\n    addToArmy(bot);\n    setSelectedBot(null);\n  };\n  const handleFilterByClass = botClass => {\n    filterByClass(botClass);\n    setSelectedBot(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      goBack: () => setSelectedBot(null),\n      enlistBot: handleEnlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bot Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SortBar, {\n        onSort: setSortProperty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => showBotSpecs(bot),\n            children: \"Show Specs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), bot.name, \" - \", bot.bot_class, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEnlist(bot),\n            children: \"Enlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFilterByClass(bot.bot_class),\n            children: \"Filter by Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, bot.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BotCollection, \"CspADv/FRv6/+XGj1A6PxIiv3tE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","BotSpecs","SortBar","jsxDEV","_jsxDEV","BotCollection","addToArmy","filterByClass","showBotSpecs","_s","bots","setBots","selectedBot","setSelectedBot","sortProperty","setSortProperty","fetch","then","response","ok","Error","statusText","json","data","catch","error","console","sortBots","property","sortedBots","sort","a","b","handleEnlist","bot","handleFilterByClass","botClass","children","goBack","enlistBot","fileName","_jsxFileName","lineNumber","columnNumber","onSort","map","onClick","name","bot_class","id","_c","$RefreshReg$"],"sources":["/home/max/code-challenges/Bot-Battlr/src/components/BotCollection.js"],"sourcesContent":["// src/components/BotCollection.js\nimport React, { useState, useEffect } from 'react';\nimport BotSpecs from './BotSpecs';\nimport SortBar from './SortBar';\n\nconst BotCollection = ({ addToArmy, filterByClass, showBotSpecs }) => {\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [sortProperty, setSortProperty] = useState('health');\n\n  useEffect(() => {\n    fetch('http://localhost:8001/bots')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Failed to fetch bot data: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        setBots(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  const sortBots = (property) => {\n    const sortedBots = [...bots].sort((a, b) => a[property] - b[property]);\n    setBots(sortedBots);\n  };\n\n  useEffect(() => {\n    sortBots(sortProperty);\n  }, [sortProperty]);\n\n  const handleEnlist = (bot) => {\n    addToArmy(bot);\n    setSelectedBot(null);\n  };\n\n  const handleFilterByClass = (botClass) => {\n    filterByClass(botClass);\n    setSelectedBot(null);\n  };\n\n  return (\n    <div>\n      {selectedBot ? (\n        <BotSpecs bot={selectedBot} goBack={() => setSelectedBot(null)} enlistBot={handleEnlist} />\n      ) : (\n        <div>\n          <h2>Bot Collection</h2>\n          <SortBar onSort={setSortProperty} />\n          <ul>\n            {bots.map(bot => (\n              <li key={bot.id}>\n                <button onClick={() => showBotSpecs(bot)}>Show Specs</button>\n                {bot.name} - {bot.bot_class}\n                <button onClick={() => handleEnlist(bot)}>Enlist</button>\n                <button onClick={() => handleFilterByClass(bot.bot_class)}>Filter by Class</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BotCollection;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,SAAS;EAAEC,aAAa;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,QAAQ,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,6BAA4BF,QAAQ,CAACG,UAAW,EAAC,CAAC;MACrE;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACZZ,OAAO,CAACY,IAAI,CAAC;IACf,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,QAAQ,GAAIC,QAAQ,IAAK;IAC7B,MAAMC,UAAU,GAAG,CAAC,GAAGnB,IAAI,CAAC,CAACoB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,QAAQ,CAAC,GAAGI,CAAC,CAACJ,QAAQ,CAAC,CAAC;IACtEjB,OAAO,CAACkB,UAAU,CAAC;EACrB,CAAC;EAED7B,SAAS,CAAC,MAAM;IACd2B,QAAQ,CAACb,YAAY,CAAC;EACxB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMmB,YAAY,GAAIC,GAAG,IAAK;IAC5B5B,SAAS,CAAC4B,GAAG,CAAC;IACdrB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMsB,mBAAmB,GAAIC,QAAQ,IAAK;IACxC7B,aAAa,CAAC6B,QAAQ,CAAC;IACvBvB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACET,OAAA;IAAAiC,QAAA,EACGzB,WAAW,gBACVR,OAAA,CAACH,QAAQ;MAACiC,GAAG,EAAEtB,WAAY;MAAC0B,MAAM,EAAEA,CAAA,KAAMzB,cAAc,CAAC,IAAI,CAAE;MAAC0B,SAAS,EAAEN;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3FvC,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBvC,OAAA,CAACF,OAAO;QAAC0C,MAAM,EAAE7B;MAAgB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCvC,OAAA;QAAAiC,QAAA,EACG3B,IAAI,CAACmC,GAAG,CAACX,GAAG,iBACX9B,OAAA;UAAAiC,QAAA,gBACEjC,OAAA;YAAQ0C,OAAO,EAAEA,CAAA,KAAMtC,YAAY,CAAC0B,GAAG,CAAE;YAAAG,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC5DT,GAAG,CAACa,IAAI,EAAC,KAAG,EAACb,GAAG,CAACc,SAAS,eAC3B5C,OAAA;YAAQ0C,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACC,GAAG,CAAE;YAAAG,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzDvC,OAAA;YAAQ0C,OAAO,EAAEA,CAAA,KAAMX,mBAAmB,CAACD,GAAG,CAACc,SAAS,CAAE;YAAAX,QAAA,EAAC;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAJ5ET,GAAG,CAACe,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CA9DIJ,aAAa;AAAA6C,EAAA,GAAb7C,aAAa;AAgEnB,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}