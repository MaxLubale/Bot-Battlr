{"ast":null,"code":"var _jsxFileName = \"/home/max/code-challenges/Bot-Battlr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './components/BotCollection';\nimport BotArmy from './components/BotArmy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [allBots, setAllBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    // Fetch all bots from the JSON server\n    fetch('http://localhost:8001/bots').then(response => response.json()).then(data => setAllBots(data)).catch(error => console.error(error));\n  }, []);\n  const addToArmy = bot => {\n    // Check if the bot is not already enlisted\n    if (!enlistedBots.some(enlistedBot => enlistedBot.id === bot.id)) {\n      // Enlist the bot\n      setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, bot]);\n\n      // Remove the enlisted bot from the main list (allBots)\n      setAllBots(prevAllBots => prevAllBots.filter(b => b.id !== bot.id));\n\n      // Update the backend by sending a DELETE request\n      fetch(`http://localhost:8001/bots/${bot.id}`, {\n        method: 'DELETE'\n      }).then(response => response.json()).then(data => console.log(`Bot ${bot.name} has been enlisted!`)).catch(error => console.error(error));\n    } else {\n      console.log(`${bot.name} is already enlisted.`);\n    }\n  };\n  const showBotSpecs = bot => {\n    // Placeholder for your logic to display bot specs\n    console.log('Showing specs for bot:', bot);\n  };\n  const filterByClass = botClass => {\n    // Placeholder for your logic to filter bots by class\n    console.log(`Filtering bots by class ${botClass}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: allBots,\n      addToArmy: addToArmy,\n      showBotSpecs: showBotSpecs,\n      filterByClass: filterByClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enlisted Bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: enlistedBots.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: bot.avatar_url,\n          alt: `${bot.name} Avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), bot.name, \" - \", bot.bot_class]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BfOyAvOkz7S7E8gy7t/RhhC1oOI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","BotArmy","jsxDEV","_jsxDEV","App","_s","allBots","setAllBots","enlistedBots","setEnlistedBots","fetch","then","response","json","data","catch","error","console","addToArmy","bot","some","enlistedBot","id","prevEnlistedBots","prevAllBots","filter","b","method","log","name","showBotSpecs","filterByClass","botClass","children","fileName","_jsxFileName","lineNumber","columnNumber","bots","map","src","avatar_url","alt","bot_class","_c","$RefreshReg$"],"sources":["/home/max/code-challenges/Bot-Battlr/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './components/BotCollection';\nimport BotArmy from './components/BotArmy';\n\n\nconst App = () => {\n  const [allBots, setAllBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    // Fetch all bots from the JSON server\n    fetch('http://localhost:8001/bots')\n      .then(response => response.json())\n      .then(data => setAllBots(data))\n      .catch(error => console.error(error));\n  }, []);\n\n  const addToArmy = (bot) => {\n    // Check if the bot is not already enlisted\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)) {\n      // Enlist the bot\n      setEnlistedBots((prevEnlistedBots) => [...prevEnlistedBots, bot]);\n\n      // Remove the enlisted bot from the main list (allBots)\n      setAllBots((prevAllBots) => prevAllBots.filter((b) => b.id !== bot.id));\n\n      // Update the backend by sending a DELETE request\n      fetch(`http://localhost:8001/bots/${bot.id}`, { method: 'DELETE' })\n        .then(response => response.json())\n        .then(data => console.log(`Bot ${bot.name} has been enlisted!`))\n        .catch(error => console.error(error));\n    } else {\n      console.log(`${bot.name} is already enlisted.`);\n    }\n  };\n\n  const showBotSpecs = (bot) => {\n    // Placeholder for your logic to display bot specs\n    console.log('Showing specs for bot:', bot);\n  };\n\n  const filterByClass = (botClass) => {\n    // Placeholder for your logic to filter bots by class\n    console.log(`Filtering bots by class ${botClass}`);\n  };\n\n  return (\n    <div>\n      <h1>Your Bot Army</h1>\n      <BotCollection\n        bots={allBots}\n        addToArmy={addToArmy}\n        showBotSpecs={showBotSpecs}\n        filterByClass={filterByClass}\n      />\n      <h2>Enlisted Bots</h2>\n      <ul>\n        {enlistedBots.map(bot => (\n          <li key={bot.id}>\n            <img src={bot.avatar_url} alt={`${bot.name} Avatar`} />\n            {bot.name} - {bot.bot_class}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}